// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230202091138_ini8709")]
    partial class ini8709
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Education_1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<byte?>("EducationDegree")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Education_1s");
                });

            modelBuilder.Entity("Entities.Education_10", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("Avg")
                        .HasColumnType("real");

                    b.Property<byte?>("AvgEducationDegree")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Education_10s");
                });

            modelBuilder.Entity("Entities.Education_11", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<byte?>("EducationDegree")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Education_11s");
                });

            modelBuilder.Entity("Entities.Education_12", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<byte?>("EducationDegree")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Education_12s");
                });

            modelBuilder.Entity("Entities.Education_2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<byte?>("EducationDegree")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Education_2s");
                });

            modelBuilder.Entity("Entities.Education_3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<byte?>("EducationDegree")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Education_3s");
                });

            modelBuilder.Entity("Entities.Education_4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<byte?>("EducationDegree")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Education_4s");
                });

            modelBuilder.Entity("Entities.Education_5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<byte?>("EducationDegree")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Education_5s");
                });

            modelBuilder.Entity("Entities.Education_6", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MasterCount")
                        .HasColumnType("int");

                    b.Property<byte?>("MasterGroup")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("StudentCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Education_6s");
                });

            modelBuilder.Entity("Entities.Education_7", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<byte?>("EducationDegree")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Education_7s");
                });

            modelBuilder.Entity("Entities.Education_8", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<byte?>("EducationDegree")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Education_8s");
                });

            modelBuilder.Entity("Entities.Education_9", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<byte?>("EducationDegree")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Education_9s");
                });

            modelBuilder.Entity("Entities.IT_1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<int?>("Kol")
                        .HasColumnType("int");

                    b.Property<byte?>("Master")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("IT_1s");
                });

            modelBuilder.Entity("Entities.IT_2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<int?>("Kol")
                        .HasColumnType("int");

                    b.Property<byte?>("Master")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("IT_2s");
                });

            modelBuilder.Entity("Entities.IT_3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<int?>("Kol")
                        .HasColumnType("int");

                    b.Property<byte?>("Master")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("IT_3s");
                });

            modelBuilder.Entity("Entities.IT_4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<int?>("Kol")
                        .HasColumnType("int");

                    b.Property<byte?>("Master")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("IT_4s");
                });

            modelBuilder.Entity("Entities.IT_5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("Master")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("IT_5s");
                });

            modelBuilder.Entity("Entities.IT_6", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("Master")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("IT_6s");
                });

            modelBuilder.Entity("Entities.IT_7", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("Master")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("IT_7s");
                });

            modelBuilder.Entity("Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_FA")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Nofication_Type")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("NotificationStatus")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Entities.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Message_Type")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("Entities.Research_1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte?>("ResourceGroup")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Resource_Type")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Research_1s");
                });

            modelBuilder.Entity("Entities.Research_2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("Ceminar")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte?>("Term")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Research_2s");
                });

            modelBuilder.Entity("Entities.Research_3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte?>("ResourceGroup")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Research_3s");
                });

            modelBuilder.Entity("Entities.Research_4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte?>("ResourceGroup")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Research_4s");
                });

            modelBuilder.Entity("Entities.Research_5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte?>("ResourceGroup")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Research_5s");
                });

            modelBuilder.Entity("Entities.Research_6", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte?>("ResourceGroup")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Research_6s");
                });

            modelBuilder.Entity("Entities.Resource_1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<byte?>("Faculty")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Resource_1s");
                });

            modelBuilder.Entity("Entities.Resource_2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<byte?>("Master")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Resource_2s");
                });

            modelBuilder.Entity("Entities.Resource_3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<byte?>("Master")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Resource_3s");
                });

            modelBuilder.Entity("Entities.Resource_4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Resource_4s");
                });

            modelBuilder.Entity("Entities.Resource_5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MasterCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("StudentCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Resource_5s");
                });

            modelBuilder.Entity("Entities.Resource_6", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MasterCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ScienseCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Resource_6s");
                });

            modelBuilder.Entity("Entities.Resource_7", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ScienseCount")
                        .HasColumnType("int");

                    b.Property<byte?>("SienceGroup")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Resource_7s");
                });

            modelBuilder.Entity("Entities.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Entities.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Education_1_1")
                        .HasColumnType("int");

                    b.Property<int?>("Education_1_2")
                        .HasColumnType("int");

                    b.Property<int?>("Education_1_3")
                        .HasColumnType("int");

                    b.Property<int?>("Education_1_4")
                        .HasColumnType("int");

                    b.Property<int?>("Education_1_All")
                        .HasColumnType("int");

                    b.Property<int?>("Education_2_1")
                        .HasColumnType("int");

                    b.Property<int?>("Education_2_2")
                        .HasColumnType("int");

                    b.Property<int?>("Education_2_3")
                        .HasColumnType("int");

                    b.Property<int?>("Education_2_4")
                        .HasColumnType("int");

                    b.Property<int?>("Education_2_All")
                        .HasColumnType("int");

                    b.Property<int?>("Research_1")
                        .HasColumnType("int");

                    b.Property<int?>("Resource_7_1")
                        .HasColumnType("int");

                    b.Property<int?>("Resource_7_2")
                        .HasColumnType("int");

                    b.Property<int?>("Resource_7_3")
                        .HasColumnType("int");

                    b.Property<int?>("Resource_7_4")
                        .HasColumnType("int");

                    b.Property<int?>("Resource_7_All")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Entities.Student_1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Master")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Student_1s");
                });

            modelBuilder.Entity("Entities.Student_2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("Ceremony")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Student_2s");
                });

            modelBuilder.Entity("Entities.Student_3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Student_3s");
                });

            modelBuilder.Entity("Entities.Student_4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Student_4s");
                });

            modelBuilder.Entity("Entities.Student_5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<byte?>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Student_5s");
                });

            modelBuilder.Entity("Entities.Student_6", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Student_6s");
                });

            modelBuilder.Entity("Entities.Student_7", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Student_7s");
                });

            modelBuilder.Entity("Entities.Student_8", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("Student_8s");
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LastLoginDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Entities.UserReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("ChartType")
                        .HasColumnType("tinyint");

                    b.Property<string>("Indicator_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistereUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RegistereUserId");

                    b.ToTable("UserReports");
                });

            modelBuilder.Entity("Entities.UserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Entities.Education_1", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Education_1s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Education_10", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Education_10s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Education_11", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Education_11s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Education_12", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Education_12s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Education_2", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Education_2s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Education_3", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Education_3s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Education_4", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Education_4s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Education_5", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Education_5s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Education_6", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Education_6s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Education_7", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Education_7s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Education_8", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Education_8s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Education_9", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Education_9s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.IT_1", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("IT_1s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.IT_2", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("IT_2s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.IT_3", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("IT_3s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.IT_4", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("IT_4s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.IT_5", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("IT_5s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.IT_6", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("IT_6s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.IT_7", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("IT_7s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Reminder", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Reminders")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Research_1", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Research_1s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Research_2", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Research_2s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Research_3", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Research_3s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Research_4", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Research_4s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Research_5", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Research_5s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Research_6", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Research_6s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Resource_1", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Resource_1s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Resource_2", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Resource_2s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Resource_3", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Resource_3s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Resource_4", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Resource_4s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Resource_5", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Resource_5s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Resource_6", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Resource_6s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Resource_7", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Resource_7s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Student_1", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Student_1s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Student_2", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Student_2s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Student_3", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Student_3s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Student_4", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Student_4s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Student_5", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Student_5s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Student_6", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Student_6s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Student_7", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Student_7s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.Student_8", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("Student_8s")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.UserReport", b =>
                {
                    b.HasOne("Entities.User", "RegistereUser")
                        .WithMany("UserReports")
                        .HasForeignKey("RegistereUserId");

                    b.Navigation("RegistereUser");
                });

            modelBuilder.Entity("Entities.UserRole", b =>
                {
                    b.HasOne("Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Entities.User", null)
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Entities.User", null)
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Entities.User", null)
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Education_10s");

                    b.Navigation("Education_11s");

                    b.Navigation("Education_12s");

                    b.Navigation("Education_1s");

                    b.Navigation("Education_2s");

                    b.Navigation("Education_3s");

                    b.Navigation("Education_4s");

                    b.Navigation("Education_5s");

                    b.Navigation("Education_6s");

                    b.Navigation("Education_7s");

                    b.Navigation("Education_8s");

                    b.Navigation("Education_9s");

                    b.Navigation("IT_1s");

                    b.Navigation("IT_2s");

                    b.Navigation("IT_3s");

                    b.Navigation("IT_4s");

                    b.Navigation("IT_5s");

                    b.Navigation("IT_6s");

                    b.Navigation("IT_7s");

                    b.Navigation("Logins");

                    b.Navigation("Reminders");

                    b.Navigation("Research_1s");

                    b.Navigation("Research_2s");

                    b.Navigation("Research_3s");

                    b.Navigation("Research_4s");

                    b.Navigation("Research_5s");

                    b.Navigation("Research_6s");

                    b.Navigation("Resource_1s");

                    b.Navigation("Resource_2s");

                    b.Navigation("Resource_3s");

                    b.Navigation("Resource_4s");

                    b.Navigation("Resource_5s");

                    b.Navigation("Resource_6s");

                    b.Navigation("Resource_7s");

                    b.Navigation("Student_1s");

                    b.Navigation("Student_2s");

                    b.Navigation("Student_3s");

                    b.Navigation("Student_4s");

                    b.Navigation("Student_5s");

                    b.Navigation("Student_6s");

                    b.Navigation("Student_7s");

                    b.Navigation("Student_8s");

                    b.Navigation("Tokens");

                    b.Navigation("UserReports");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
